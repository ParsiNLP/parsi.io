============================= test session starts ==============================
platform darwin -- Python 3.10.2, pytest-7.0.1, pluggy-1.0.0
rootdir: /Users/omid/Documents/Parsi.io/parsi.io
collected 1 item

parsi_io/test/AddressExtraction_test.py F                                [100%]

=================================== FAILURES ===================================
____________________________ test_AddressExtraction ____________________________

    def test_AddressExtraction():
        errors = []
        compare = lambda x, y: collections.Counter(x) == collections.Counter(y)
    
        in_texts, out_texts = get_testcases()
        o = AddressExtraction()
        for i, j, k in zip(in_texts, out_texts, range(1, len(in_texts)+1)):
            res = o.run(i)
            if not compare(res, j.split('\n')):
                errors.append('Input {0}: your answer is {1} correct answer is {2}'.format(str(k), str(res), str(j.split('\n'))))
>       assert not errors, 'errors occured:\n{}'.format('\n'.join(errors))
E       AssertionError: errors occured:
E         Input 1: your answer is ['www.asaklaw.com', 'https://www.instagram.com/asaklaw_/?hl=en', '02140223952', 'خیابان شریعتی، بالاتر از باغ سفارت انگلیس، قبل از پل صدر، روبرو پمپ بنزین الهیه، ساختمان سفیران، طبقه 2'] correct answer is ['خیابان شریعتی، بالاتر از باغ سفارت انگلیس، قبل از پل صدر، روبرو پمپ بنزین الهیه، ساختمان سفیران، طبقه 2 ', '02140223952', 'https://www.instagram.com/asaklaw_/?hl=en', 'www.asaklaw.com']
E         Input 2: your answer is ['تهران -میدان بهارستان - خیابان مجاهدین اسلام - مجلس شورای اسلامی', '33132441', '39931', 'تهران'] correct answer is ['تهران -میدان بهارستان - خیابان مجاهدین اسلام - مجلس شورای اسلامی ', '021-39931', '33132441']
E         Input 3: your answer is ['محله کانون ایلام و در خیابان بلور مدرس،بلوار آزادی', '09183418956', 'ایلام', 'aftabcomplex@gmail.com'] correct answer is ['محله کانون ایلام خیابان بلوار مدرس,بلوار آزادی ', '09183418956', 'aftabcomplex@gmail.com']
E         Input 4: your answer is ['خیابان شریعتی در شهر تهران'] correct answer is ['خیابان شریعتی شهر تهران']
E         Input 5: your answer is ['ایران', '+98-21-66161521', 'نشانی: تهران، خیابان آزادی، دانشگاه صنعتی شریف'] correct answer is ['نشانی: تهران، خیابان آزادی، دانشگاه صنعتی شریف', 'تلفن:+98-21-66161521']
E         Input 6: your answer is ['+98 21 5572 0990', 'آدرس: استان تهران، تهران، منطقه 10، استان تهران، تهران،، خیابان حسام الدین، ایران'] correct answer is ['آدرس: استان تهران، تهران، منطقه ۱۰، استان تهران، تهران،، خیابان حسام الدین، ایران', 'تلفن: +98 21 5572 0990']
E         Input 7: your answer is ['مشهد', 'ایران', 'تهران سعادت اباد، بلوار دریا، بعد از خیابان رامشه، ساختمان پزشکان 56،جنب بانک'] correct answer is ['تهران سعادت اباد، بلوار دریا، بعد از خیابان رامشه، ساختمان پزشکان 56،جنب بانک آینده. طبقه اول، واحد 1', 'مشهد']
E         Input 8: your answer is ['ایران', 'مشهد'] correct answer is ['مشهد']
E         Input 9: your answer is ['ایران', 'مشهد'] correct answer is ['مشهد']
E         Input 10: your answer is [] correct answer is ['مشهد']
E         Input 11: your answer is ['14848131', 'ایران', '02144739022', 'تهران', 'کرج', 'azadisportcompiex.com', 'اتوبان تهران – کرج، جنب مجموعه ورزشی آزادی', 'info@azadisportcompiex.com'] correct answer is ['کیلومتر 5 آزادراه تهران کرج ', '02144739022', 'info@azadisportcompiex', 'azadisportcompiex.com', '1484813111']
E         Input 12: your answer is ['شهر ایلام خیابان پاسداران', '08342222222'] correct answer is ['ایلام خیابان پاسداران', '۰۸۴۳۲۲۲۲۲۲۲']
E         Input 13: your answer is ['کرمانشاه واقع در بلوار خوش', '08331111111'] correct answer is ['بلوار طاق بستان ', '۰۸۳۳۱۱۱۱۱۱۱']
E       assert not ["Input 1: your answer is ['www.asaklaw.com', 'https://www.instagram.com/asaklaw_/?hl=en', '02140223952', 'خیابان شریع... ['آدرس: استان تهران، تهران، منطقه ۱۰، استان تهران، تهران،، خیابان حسام الدین، ایران', 'تلفن: +98 21 5572 0990']", ...]

parsi_io/test/AddressExtraction_test.py:41: AssertionError
=============================== warnings summary ===============================
parsi_io/modules/address_extractions.py:19
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:19: DeprecationWarning: invalid escape sequence '\w'
    self.pattern = f"({self.starter_keywords})([^\\.]{{{{{{spaces_count}}}}}}({self.middle_address_keywords}|{self.separators})){{{{{{keyword_count}}}}}}( *({self.special_place})? *\w+)"

parsi_io/modules/address_extractions.py:53
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:53: DeprecationWarning: invalid escape sequence '\+'
    mobile_pattern = "(0|((\+98)[- ]?|(\(\+98\))[- ]?))?9([01239][0-9])[- ]?[0-9]{3}[- ]?[0-9]{4}"

parsi_io/modules/address_extractions.py:54
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:54: DeprecationWarning: invalid escape sequence '\+'
    phone_pattern = f"(0|(((\+98)|(\(\+98\)))[- ]?))?(({cities_phone_prefix}|(\({cities_phone_prefix}\)))[- ]?)?[0-9]{{1,4}} ?[0-9]{{4}}"

parsi_io/modules/address_extractions.py:54
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:54: DeprecationWarning: invalid escape sequence '\('
    phone_pattern = f"(0|(((\+98)|(\(\+98\)))[- ]?))?(({cities_phone_prefix}|(\({cities_phone_prefix}\)))[- ]?)?[0-9]{{1,4}} ?[0-9]{{4}}"

parsi_io/modules/address_extractions.py:54
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:54: DeprecationWarning: invalid escape sequence '\)'
    phone_pattern = f"(0|(((\+98)|(\(\+98\)))[- ]?))?(({cities_phone_prefix}|(\({cities_phone_prefix}\)))[- ]?)?[0-9]{{1,4}} ?[0-9]{{4}}"

parsi_io/modules/address_extractions.py:55
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:55: DeprecationWarning: invalid escape sequence '\('
    phone_without_country_pattern = f"(((0?{cities_phone_prefix})|(\(0?{cities_phone_prefix}\)))[- ]?)?[0-9]{{1,4}} ?[0-9]{{4}}"  # ----->   (021)7782540555

parsi_io/modules/address_extractions.py:55
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:55: DeprecationWarning: invalid escape sequence '\)'
    phone_without_country_pattern = f"(((0?{cities_phone_prefix})|(\(0?{cities_phone_prefix}\)))[- ]?)?[0-9]{{1,4}} ?[0-9]{{4}}"  # ----->   (021)7782540555

parsi_io/modules/address_extractions.py:58
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:58: DeprecationWarning: invalid escape sequence '\('
    phone_four_digit = f"((0?{cities_phone_prefix}|\(0?{cities_phone_prefix}\))[- ]?)[1-9][0-9]{{3}}|([3-9]\d{{3}}|2[1-9]\d{{2}})"

parsi_io/modules/address_extractions.py:58
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:58: DeprecationWarning: invalid escape sequence '\)'
    phone_four_digit = f"((0?{cities_phone_prefix}|\(0?{cities_phone_prefix}\))[- ]?)[1-9][0-9]{{3}}|([3-9]\d{{3}}|2[1-9]\d{{2}})"

parsi_io/modules/address_extractions.py:58
parsi_io/modules/address_extractions.py:58
  /Users/omid/Documents/Parsi.io/parsi.io/parsi_io/modules/address_extractions.py:58: DeprecationWarning: invalid escape sequence '\d'
    phone_four_digit = f"((0?{cities_phone_prefix}|\(0?{cities_phone_prefix}\))[- ]?)[1-9][0-9]{{3}}|([3-9]\d{{3}}|2[1-9]\d{{2}})"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED parsi_io/test/AddressExtraction_test.py::test_AddressExtraction - Asse...
======================== 1 failed, 11 warnings in 0.26s ========================
